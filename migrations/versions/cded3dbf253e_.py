"""empty message

Revision ID: cded3dbf253e
Revises: b2c07d959b7d
Create Date: 2024-07-04 13:35:20.403220

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cded3dbf253e'
down_revision = 'b2c07d959b7d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_email', sa.String(length=50), nullable=False))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_constraint('transaction_account_reference_fkey', type_='foreignkey')
        batch_op.drop_column('account_reference')

    with op.batch_alter_table('wallet', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_email', sa.String(length=50), nullable=False))
        batch_op.create_unique_constraint(None, ['user_email'])
        batch_op.drop_constraint('wallet_account_reference_fkey', type_='foreignkey')
        batch_op.drop_column('account_reference')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('wallet', schema=None) as batch_op:
        batch_op.add_column(sa.Column('account_reference', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('wallet_account_reference_fkey', 'user', ['account_reference'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('user_email')

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('account_reference', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('transaction_account_reference_fkey', 'user', ['account_reference'], ['id'])
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_column('user_email')

    # ### end Alembic commands ###
